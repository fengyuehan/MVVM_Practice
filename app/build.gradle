
import com.example.versionplugin.*

apply plugin: 'com.android.application'
apply plugin: 'kotlin-android'
apply plugin: 'com.alibaba.arouter'
apply plugin: 'kotlin-kapt'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion ProjectBuildConfigs.compileSdkVersion
    buildToolsVersion ProjectBuildConfigs.buildToolsVersion

    defaultConfig {
        applicationId ProjectBuildConfigs.applicationId
        minSdkVersion ProjectBuildConfigs.minSdkVersion
        targetSdkVersion ProjectBuildConfigs.targetSdkVersion
        versionCode ProjectBuildConfigs.versionCode
        versionName ProjectBuildConfigs.versionName
        testInstrumentationRunner DependencyConfig.AndroidX.AndroidJUnitRunner
        multiDexKeepProguard file("multidexKeep.pro")
        multiDexEnabled true

        ndk {
            // 设置支持的SO库架构
            //abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86'
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments += [ROOM_ACCESSOR_NAME_PREFIX: "AppModule"]
            }
        }


    }

    buildTypes {
        // 对应 ALPHA 版本
        debug {
            buildConfigField "String", "VERSION_TYPE", "\"${ProjectBuildConfigs.Version.ALPHA}\""
//            signingConfig signingConfigs.releaseConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        beta {
            buildConfigField "String", "VERSION_TYPE", "\"${ProjectBuildConfigs.Version.BETA}\""
//            signingConfig signingConfigs.releaseConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "String", "VERSION_TYPE", "\"${ProjectBuildConfigs.Version.RELEASE}\""
//            signingConfig signingConfigs.releaseConfig
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    // 自定义打包apk的文件名
    android.applicationVariants.all { variant ->
        variant.outputs.all { output ->
            if (outputFileName != null && outputFileName.endsWith('.apk')) {
                outputFileName = "${ProjectBuildConfigs.applicationId}" +
                        "_${ProjectBuildConfigs.versionCode}" +
                        "(${ProjectBuildConfigs.versionName})" +
                        "_${variant.buildType.name}" +
                        ".apk"
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = '1.8'
    }
}

dependencies {
    implementation fileTree(dir: "libs", include: ["*.jar"])
    if (!ProjectBuildConfigs.isAppMode) {
        //implementation project(path: ':accountmodule')
    } else {
        implementation project(path: ':lib_common')
    }
    kapt project(':RoomAccessorCompiler')
    implementation project(path: ':accountmodule')
    implementation DependencyConfig.JetPack.HiltCore

    //kapt DependencyConfig.GitHub.AutoServiceAnnotations
    kapt DependencyConfig.JetPack.HiltApt
    kapt DependencyConfig.JetPack.HiltAndroidx
    kapt DependencyConfig.JetPack.RoomCompiler
    implementation DependencyConfig.JetPack.Room
}