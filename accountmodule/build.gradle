
import com.example.versionplugin.*

if (ProjectBuildConfigs.isAppMode) {
    apply plugin: 'com.android.application'
} else {
    apply plugin: 'com.android.library'
}
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-android-extensions'
apply plugin: 'kotlin-kapt'
apply plugin: 'dagger.hilt.android.plugin'

android {
    compileSdkVersion ProjectBuildConfigs.compileSdkVersion
    buildToolsVersion ProjectBuildConfigs.buildToolsVersion

    defaultConfig {
        minSdkVersion ProjectBuildConfigs.minSdkVersion
        targetSdkVersion ProjectBuildConfigs.targetSdkVersion
        versionCode ProjectBuildConfigs.versionCode
        versionName ProjectBuildConfigs.versionName
        testInstrumentationRunner DependencyConfig.AndroidX.AndroidJUnitRunner
        if (ProjectBuildConfigs.isAppMode){
            applicationId "com.example.accountmodule"
        }

        ndk {
            // 设置支持的SO库架构
            //abiFilters 'armeabi', 'x86', 'armeabi-v7a', 'x86_64', 'arm64-v8a'
            abiFilters 'armeabi-v7a', 'arm64-v8a', 'x86'
        }

        kapt {
            arguments {
                arg("AROUTER_MODULE_NAME", project.name)
                arg("eventBusIndex", "${ProjectBuildConfigs.applicationId}.eventbus.index.${project.name}EventIndex")
            }
        }

        javaCompileOptions {
            annotationProcessorOptions {
                arguments = [ROOM_ACCESSOR_NAME_PREFIX: "AccountModule"]
            }
        }

    }

    //统一规范资源名称前缀，防止多个 module 之间资源冲突
    //resourcePrefix "account_"

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8.toString()
    }

    buildFeatures {
        viewBinding = true
    }

    sourceSets {
        main {
            if (ProjectBuildConfigs.isAppMode) {
                //module 作为 application 独立运行
                manifest.srcFile 'src/main/module/AndroidManifest.xml'
            } else {
                //module 作为 library 合并到宿主App
                manifest.srcFile 'src/main/AndroidManifest.xml'
                resources {
                    exclude 'src/main/module/*'
                }
            }
        }
    }

    buildTypes {
        // 对应 ALPHA 版本
        debug {
            buildConfigField "String", "VERSION_TYPE", "\"${ProjectBuildConfigs.Version.ALPHA}\""
            minifyEnabled false
            aaptOptions.cruncherEnabled = false
            aaptOptions.useNewCruncher = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        beta {
            buildConfigField "String", "VERSION_TYPE", "\"${ProjectBuildConfigs.Version.BETA}\""
            minifyEnabled false
            aaptOptions.cruncherEnabled = false
            aaptOptions.useNewCruncher = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
        release {
            buildConfigField "String", "VERSION_TYPE", "\"${ProjectBuildConfigs.Version.RELEASE}\""
            minifyEnabled false
            aaptOptions.cruncherEnabled = false
            aaptOptions.useNewCruncher = false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }
}


dependencies {
    implementation fileTree(dir: 'libs', include: ['*.jar'])

    api project(path: ':lib_common')
    implementation DependencyConfig.AndroidX.AppCompat
    implementation DependencyConfig.AndroidX.ConstraintLayout
    implementation 'com.google.android.material:material:1.3.0'
    testImplementation DependencyConfig.Android.Junit
    androidTestImplementation DependencyConfig.AndroidX.TestExtJunit
    androidTestImplementation DependencyConfig.AndroidX.TestEspresso
    implementation DependencyConfig.JetPack.HiltCore

    kapt DependencyConfig.GitHub.ARouteCompiler
    kapt DependencyConfig.GitHub.EventBusAPT
    kapt DependencyConfig.GitHub.AutoServiceAnnotations
    kapt DependencyConfig.JetPack.HiltApt
    kapt DependencyConfig.JetPack.HiltAndroidx
    kapt DependencyConfig.JetPack.LifecycleCompilerAPT
    implementation DependencyConfig.JetPack.Room
    kapt DependencyConfig.JetPack.Room
    kapt project(':RoomAccessorCompiler')
}